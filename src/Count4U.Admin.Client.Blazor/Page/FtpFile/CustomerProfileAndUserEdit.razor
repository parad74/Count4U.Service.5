@page "/customerprofileanduseredit/{customerCode}/{email}"
@inherits CustomerProfileAndUserEditBase
@attribute [Authorize(Policy = UserPolicy.IsManager)]

<style type="text/css">
    .fa_custom {
        color: #0b960f
    }

    .fa_custom_white {
        color: #ffffff
    }

    .select_border_color {
        /*    border: 1px solid #0b960f;*/
        border-radius: .1rem;
    }
</style>

@if (this._profileAndUserModel == null)
{
    <p><em>Loading...</em></p>
}
else if (LocalizationResources == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="bg-success d-flex justify-content-between mb-2">
        <div class="bg-success p-1 text-white"> &nbsp; Customer Edit&nbsp;</div>
        <div class="bg-success p-1">
            @*<i class="fa fa-pencil text-white"></i>*@
            &nbsp;<span class="oi oi-pencil text-white" aria-hidden="true"></span> &nbsp;
        </div>
    </div>
    <div class="row">

        <div class="col-10">
            <div class="card" style="border:none">
                <div class="card-body" style="border:none">
                    @*<h4>@LocalizationResources.Register_User</h4>*@
                    @*<h5 class="card-title">@LocalizationResources.Register_Create_User_Account</h5>*@
                    @*<p></p>
                        <a href="" style="color:green">@LocalizationResources.Register_Already_a_Member</a>
                        <p></p>*@

                    <EditForm Model="@_profileAndUserModel" OnValidSubmit="@EditOrRegisterAsync">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group row">
                            <label class="col-form-label col-sm-3 px-0" for="customerCode">@LocalizationResources.Property_Inventor_CustomerCode&nbsp;</label>
                            <div class="col-sm-6 px-0">
                                <InputText id="customerCode" readonly class="form-control"
                                           @bind-Value="@_profileAndUserModel.RegisterModel.CustomerCode"
                                           placeholder=@LocalizationResources.Register_customer_code_from_Count4U />
                                <ValidationMessage For="@(() => _profileAndUserModel.RegisterModel.CustomerCode)" />
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-form-label col-sm-3 px-0" for="customerCode">Date Created&nbsp;</label>
                            <div class="col-sm-6 px-0">
                                <InputText id="dateCreated" readonly class="form-control"
                                           @bind-Value="@_profileAndUserModel.RegisterModel.DateCreated" />
                            </div>
                        </div>




                        <div class="form-group  row">
                            <label class="col-form-label col-sm-3 px-0" for="email">@LocalizationResources.Register_Email_address&nbsp;</label>
                            <div class="col-sm-6 px-0">
                                <InputText id="email" readonly class="form-control" @bind-Value="@_profileAndUserModel.RegisterModel.Email" dissable
                                           placeholder="@LocalizationResources.Register_Email_will_be_use_as_login_for_your_account" />
                                <ValidationMessage For="@(() => _profileAndUserModel.RegisterModel.Email)" />
                            </div>
                        </div>


                        @*<div class="form-group row">
            <label class="col-form-label col-sm-3 px-0" for="password">@LocalizationResources.Register_Password&nbsp;*</label>
            <div class="col-sm-6 px-0">
                <InputText id="password" readonly class="form-control" @bind-Value="@_profileAndUserModel.RegisterModel.Password" dissable />
                <ValidationMessage For="@(() => _profileAndUserModel.RegisterModel.Password)" />
            </div>
        </div>*@

                        @*<div class="form-group row">
            <label class="col-form-label col-sm-3 px-0" for="passwordConfirm">@LocalizationResources.Register_Confirm_Password&nbsp;*</label>
            <div class="col-sm-6 px-0">
                <InputText id="passwordConfirm" class="form-control" @bind-Value="@_profileAndUserModel.RegisterModel.ConfirmPassword" dissable />
                <ValidationMessage For="@(() => _profileAndUserModel.RegisterModel.ConfirmPassword)" />
            </div>
        </div>*@



                        @if (this._profileAndUserModel.ProfileFile != null)
                        {
                            <div class="form-group row">
                                <label class="col-form-label col-sm-3 px-0" for="customerName">@LocalizationResources.Property_Inventor_CustomerName</label>
                                <div class="col-sm-6 px-0">
                                    @if (IsSubmit == false)
                                    {
                                        <InputText id="customerName" class="form-control" @bind-Value="@_profileAndUserModel.ProfileFile.CustomerName"
                                                   placeholder=@LocalizationResources.Register_customer_name_for_web />
                                        <ValidationMessage For="@(() => _profileAndUserModel.ProfileFile.CustomerName)" />
                                    }
                                    else
                                    {
                                        <InputText id="customerName" readonly class="form-control" @bind-Value="@_profileAndUserModel.ProfileFile.CustomerName"
                                                   placeholder=@LocalizationResources.Register_customer_name_for_web />

                                    }
                                </div>
                            </div>



                            <div class="form-group row">
                                <label class="col-form-label col-sm-3 px-0" for="description">@LocalizationResources.Property_Inventor_Description</label>
                                <div class="col-sm-6 px-0">
                                    @if (IsSubmit == false)
                                    {
                                        <InputText id="description" class="form-control" @bind-Value="@_profileAndUserModel.ProfileFile.CustomerDescription" />
                                    }
                                    else
                                    {
                                        <InputText id="description" readonly class="form-control" @bind-Value="@_profileAndUserModel.ProfileFile.CustomerDescription" />
                                    }
                                </div>
                            </div>

                        }

                        <div class="form-group row">
                            <label class="col-form-label col-sm-3 px-0">Inherit Profile from</label>
                            @*</div>

            <div class="form-group row">
                <label class="col-form-label col-sm-3 px-0"><span>&nbsp;</span></label>*@
                            <div class="col-sm-9 px-0">
                                <InputRadioGroup @bind-Value="_profileAndUserModel.RegisterModel.InheritProfile">
                                        <div class="row mt-sm-2">
                                            <div class="col-sm-4  pl-4 ml-sm-2">
                                                <InputRadio class="form-check-input" id="profile-default" Value="@InheritProfileString.Default" />
                                                &nbsp; <label class="form-check-label" for="profile-default">Default</label>
                                            </div>
                                            <div col-sm-5>
                                                <button class="btn btn-outline-success btn-sm" style="visibility: hidden;" type="button">@LocalizationResources.Select_Files</button> &nbsp; &nbsp;
                                                <span>&nbsp;</span>
                                            </div>

                                            @*<div class="col">  </div>*@
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4  pl-4 ml-sm-2">
                                                <InputRadio class="form-check-input" id="profile-fromfile" Value="@InheritProfileString.File" />
                                                &nbsp; <label class="form-check-label" for="profile-fromfile">File</label>
                                            </div>
                                            @if (_profileAndUserModel.RegisterModel.InheritProfile == @InheritProfileString.File)
                                            {
                                                <div col-sm-5>
                                                    @*<InputFile OnChange="OnInputFileChange" @ref="refInputFile" class="btn btn-outline-success  btn-sm col-3" />*@
                                                    <button id="filterinput" class="btn btn-outline-success btn-sm" type="button" @onclick="@(() => OnButtonClick("myInput"))">@LocalizationResources.Select_Files</button> &nbsp; &nbsp;
                                                    @if (this._selectedFile != null)
                                                    {
                                                        <span class="fa_custom">@this._selectedFile.Name</span>
                                                    }
                                                    else
                                                    {
                                                        <span>&nbsp;</span>
                                                    }
                                                </div>
                                            }
                                            else
                                            {
                                                <div col-sm-5>
                                                    <button class="btn btn-outline-success btn-sm" style="visibility: hidden;" type="button">@LocalizationResources.Select_Files</button> &nbsp; &nbsp;
                                                    <span>&nbsp;</span>
                                                </div>
                                            }
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4 pl-4 ml-sm-2">
                                                <InputRadio class="form-check-input" id="profile-fromcustomer" Value="@InheritProfileString.Customer" />
                                                &nbsp; <label class="form-check-label" for="profile-fromcustomer">Customer</label>
                                            </div>
                                            @if (_profileAndUserModel.RegisterModel.InheritProfile == @InheritProfileString.Customer)
                                            {
                                        <div col-sm-5>
                                            <select class="form-control form-control-sm select_border_color" id="customerlist"
                                                    @bind="@_profileAndUserModel.RegisterModel.CustomerProfileCodesFromDB.SelectByCustomerProfile">
                                                <option value="none"></option>
                                                @foreach (var sparam in _profileAndUserModel.RegisterModel.CustomerProfileCodesFromDB.CodeDictionary)
                                                    {
                                                    <option value=@sparam.Key>@sparam.Value</option>
                                                    }
                                            </select>
                                        </div>
                                            }
                                            else
                                            {
                                                <div col-sm-5>
                                                    <button class="btn btn-outline-success btn-sm" style="visibility: hidden;" type="button">@LocalizationResources.Select_Files</button> &nbsp; &nbsp;
                                                    <span>&nbsp;</span>

                                                </div>
                                            }
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-4 pl-4 ml-sm-2">
                                                <InputRadio class="form-check-input" id="profile-exist" Value="@InheritProfileString.Exist" />
                                                &nbsp; <label class="form-check-label" for="profile-exist">Exist</label>
                                            </div>
                                            <div col-sm-5>
                                                <button class="btn btn-outline-success btn-sm" style="visibility: hidden;" type="button">Exist</button> &nbsp; &nbsp;
                                                <span>&nbsp;</span>
                                            </div>

                                            @*<div class="col">  </div>*@
                                        </div>
                                                      
                                </InputRadioGroup>
                            </div>
                        </div>

                        <BlazorInputFile.InputFile IsElementHidden="true" OnChange="HandleSelection" ElementId="myInput"> </BlazorInputFile.InputFile>



                        @*<div class="form-group row">
            <label class="col-form-label col-sm-3 px-0">@LocalizationResources.Property_Permissions&nbsp;</label>

            <div class="col-sm-9 px-0 mt-sm-3">
                <div class="pl-0">
                    <InputCheckbox @bind-Value="@_profileAndUserModel.RegisterModel.IsWorker" id="isworker" />
                    <label for="isworker" class="align-top">@LocalizationResources.Property_Use_Android</label>
                </div>

                <div class="pl-0">
                    <InputCheckbox @bind-Value="@_profileAndUserModel.RegisterModel.IsManager" id="ismanager" />
                    <label for="ismanager">@LocalizationResources.Property_Manage_Profile</label>
                </div>

                <div class="pl-0">
                    <InputCheckbox @bind-Value="@_profileAndUserModel.RegisterModel.IsOwner" id="isowner" />
                    <label for="isowner">@LocalizationResources.Property_Database</label>
                </div>
            </div>
        </div>*@

                        @*<div class="form-group">
            <label for="email">@LocalizationResources.Property_Inventor_CustomerContextName</label>
            <InputText id="email" class="form-control" @bind-Value="@_registerModel.CustomerContextName"
                       aria-describedby="emailHelp" />
            <ValidationMessage For="@(() => _registerModel.CustomerContextName)" />
            <small id="emailHelp" class="form-text text-muted">@LocalizationResources.Register_customer_name_use_as_lable_for_customer</small>
        </div>*@

                        @if (this._profileAndUserResult != null)
                        {

                            @if (this._profileAndUserResult.GetUserResult != null)
                            {
                                @*@if (this._profileAndUserResult.GetUserResult.Successful == SuccessfulEnum.Successful)
                                {*@
                                    @*<div class="alert alert-success col-sm-9" role="alert">
                        <p>User insert or update successfuly</p>
                    </div>*@
                                //}

                                @if (this._profileAndUserResult.GetUserResult.Successful == SuccessfulEnum.NotSuccessful)
                                {
                                    <div class="alert alert-danger col-sm-9" role="alert">
                                        <p>Can't get user</p>
                                        <p>@this._profileAndUserResult.GetUserResult.Error</p>
                                    </div>
                                }
                            }

                                @if (this._profileAndUserResult.RegisterResult == null)
                                {

                                    <div class="col-sm-9 px-0">
                                        <div class="d-flex flex-row-reverse">
                                            <button @onclick="ToCustomers" class="btn btn-danger btn-sm search" data-toggle="tooltip" data-placement="bottom"><i class="oi oi-x text-white"></i>&nbsp; &nbsp; &nbsp;Cancel&nbsp;&nbsp;&nbsp;</button>&nbsp; &nbsp;
                                            @if (IsSubmit)
                                            {
                                                <button class="btn btn-success btn-sm  search disabled" disabled><span class="fa fa-spinner fa-spin fa-lg fa-fw"></span>Waiting ...</button>
                                            }
                                            else
                                            {
                                                <button type="submit" class="btn btn-success btn-sm search" data-toggle="tooltip" data-placement="bottom"><i class="oi oi-pencil text-white"></i>&nbsp; &nbsp; &nbsp;&nbsp;Save&nbsp;&nbsp;&nbsp;&nbsp;</button>
                                                @*<button type="submit" class="btn btn-success btn-sm search"  data-toggle="tooltip" data-placement="bottom">Submit</button>*@
                                            }
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn btn-success" style="visibility: hidden;">Save</button>

                                    @if (this._profileAndUserResult.RegisterResult.Successful == SuccessfulEnum.Successful)
                                    {
                                        <div class="alert alert-success col-sm-9" role="alert">
                                            <p>User insert or update successfuly</p>
                                        </div>
                                    }

                                    @if (this._profileAndUserResult.RegisterResult.Successful == SuccessfulEnum.NotSuccessful)
                                    {
                                        <div class="alert alert-danger col-sm-9" role="alert">
                                            <p>@LocalizationResources.Register_Cant_register</p>
                                            <p>@this._profileAndUserResult.RegisterResult.Error</p>
                                        </div>
                                    }
                                }
                            }

                            @if (this._profileAndUserModel != null)
                            {
                                @if (this._profileAndUserModel.ProfileFile != null)
                                {
                                    @if (this._profileAndUserModel.ProfileFile.Successful == SuccessfulEnum.Successful)
                                    {
                                        <div class="alert alert-success col-sm-9" role="alert">
                                            <p>Save on ftp successfuly</p>
                                        </div>
                                    }

                                    @if (this._profileAndUserModel.ProfileFile.Successful == SuccessfulEnum.NotSuccessful)
                                    {
                                        <div class="alert alert-danger col-sm-9" role="alert">
                                            <p>Save on ftp not successfuly</p>
                                            <p>@this._profileAndUserModel.ProfileFile.Error</p>
                                        </div>
                                    }
                                }
                            }
                            @*<InputFile OnChange="OnInputFileChange" @ref="refInputFile" class="btn btn-outline-success  btn-sm col-3" />*@
                        </EditForm>
                </div>

            </div>
        </div>
        <div class="col-2 p-1">
            @if (IsSubmit)
            {
                <MenuCustomerEditDissable></MenuCustomerEditDissable>
            }
            else
            {
                     @if (customerCode != null)
                           {
                                <MenuCustomerEdit customerCode="@customerCode"></MenuCustomerEdit>
                           }
            }

            </div>
    </div>
}

@code{


    //Dictionary<IBrowserFile, string> loadedFiles = new Dictionary<IBrowserFile, string>();

    //bool isLoading;
    //long maxFileSize = 105000;
    //int maxAllowedFiles = 1;
    //string exceptionMessage;
    //private InputFile refInputFile;

    //IList<string> imageDataUrls = new List<string>();

    //async Task OnInputFileChange(InputFileChangeEventArgs e)
    //{
    //    //   var imageFiles = e.GetMultipleFiles();
    //    isLoading = true;
    //    refInputFile.AdditionalAttributes ??= new Dictionary<string, object>();
    //    refInputFile.AdditionalAttributes.Add("style", "display:none;");
    //    loadedFiles.Clear();
    //    exceptionMessage = string.Empty;

    //    try
    //    {
    //        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
    //        {
    //            Console.WriteLine("file.Name : " + file.Name);
    //            //StateHasChanged();

    //            using var reader = new StreamReader(file.OpenReadStream(maxFileSize));

    //            loadedFiles.Add(file, await reader.ReadToEndAsync());
    //        }
    //        Console.WriteLine("loadedFiles.Count : " + loadedFiles.Count);
    //    }
    //    catch (Exception ex)
    //    {
    //        exceptionMessage = ex.Message;
    //        Console.WriteLine("OnInputFileChange exceptionMessage : " + exceptionMessage);
    //    }

    //    isLoading = false;
    //    refInputFile.AdditionalAttributes.Remove("style");
    //    StateHasChanged();
    //}


}
